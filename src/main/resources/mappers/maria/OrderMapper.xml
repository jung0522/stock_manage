<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.goorm.board.mapper.OrderMapper">

    <resultMap id="OrderResultMap" type="io.goorm.board.entity.Order">
        <id property="orderSeq" column="order_seq"/>
        <result property="companySeq" column="company_seq"/>
        <result property="userSeq" column="user_seq"/>
        <result property="orderNumber" column="order_number"/>
        <result property="orderDate" column="order_date"/>
        <result property="status" column="status"/>
        <result property="deliveryStatus" column="delivery_status"/>
        <result property="totalAmount" column="total_amount"/>
        <result property="discountRate" column="discount_rate"/>
        <result property="discountAmount" column="discount_amount"/>
        <result property="finalAmount" column="final_amount"/>
        <result property="approvedBy" column="approved_by"/>
        <result property="approvedAt" column="approved_at"/>
        <result property="notes" column="notes"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="version" column="version"/>
        <!-- 조인 정보 -->
        <result property="companyName" column="company_name"/>
        <result property="userName" column="user_name"/>
        <result property="userEmail" column="user_email"/>
    </resultMap>

    <!-- 발주 등록 -->
    <insert id="insert" parameterType="io.goorm.board.entity.Order" useGeneratedKeys="true" keyProperty="orderSeq">
        INSERT INTO orders (
        company_seq, user_seq, order_number, order_date, status, delivery_status,
            total_amount, discount_rate, discount_amount, final_amount,
            approved_by, approved_at, notes, created_seq, created_at,  updated_at, version
        ) VALUES (
            #{companySeq}, #{userSeq}, #{orderNumber}, #{orderDate}, #{status}, #{deliveryStatus},
            #{totalAmount}, #{discountRate}, #{discountAmount}, #{finalAmount},
            #{approvedBy}, #{approvedAt}, #{notes}, #{userSeq}, #{createdAt}, #{updatedAt}, #{version}
        )
    </insert>


    <!-- 발주 단건 조회 -->
    <select id="findById" parameterType="long" resultMap="OrderResultMap">
        SELECT o.order_seq, o.company_seq, o.user_seq, o.order_number, o.order_date,
               o.status, o.delivery_status, o.total_amount, o.discount_rate,
               o.discount_amount, o.final_amount, o.approved_by, o.approved_at,
               o.notes, o.created_at, o.updated_at, o.version,
               c.company_name, u.nickname as user_name, u.email as user_email
        FROM orders o
        LEFT JOIN companies c ON o.company_seq = c.company_seq
        LEFT JOIN users u ON o.user_seq = u.user_seq
        WHERE o.order_seq = #{orderSeq}
    </select>

    <!-- 회사별 발주 목록 조회 -->
    <select id="findByCompanySeq" resultMap="OrderResultMap">
        SELECT o.order_seq, o.company_seq, o.user_seq, o.order_number, o.order_date,
               o.status, o.delivery_status, o.total_amount, o.discount_rate,
               o.discount_amount, o.final_amount, o.approved_by, o.approved_at,
               o.notes, o.created_at, o.updated_at, o.version,
               c.company_name, u.nickname as user_name, u.email as user_email
        FROM orders o
        LEFT JOIN companies c ON o.company_seq = c.company_seq
        LEFT JOIN users u ON o.user_seq = u.user_seq
        WHERE o.company_seq = #{companySeq}
        <if test="searchDto.orderNumber != null and searchDto.orderNumber != ''">
            AND o.order_number LIKE CONCAT('%', #{searchDto.orderNumber}, '%')
        </if>
        <if test="searchDto.status != null">
            AND o.status = #{searchDto.status}
        </if>
        <if test="searchDto.deliveryStatus != null">
            AND o.delivery_status = #{searchDto.deliveryStatus}
        </if>
        <if test="searchDto.startDate != null and searchDto.endDate != null">
            AND DATE(o.order_date) BETWEEN #{searchDto.startDate} AND #{searchDto.endDate}
        </if>
        <if test="searchDto.startDate != null and searchDto.endDate == null">
            AND DATE(o.order_date) >= #{searchDto.startDate}
        </if>
        <if test="searchDto.startDate == null and searchDto.endDate != null">
            AND DATE(o.order_date) &lt;= #{searchDto.endDate}
        </if>
        ORDER BY o.order_date DESC, o.order_seq DESC
    </select>

    <!-- 전체 발주 목록 조회 (관리자용) -->
    <select id="findAll" resultMap="OrderResultMap">
        SELECT o.order_seq, o.company_seq, o.user_seq, o.order_number, o.order_date,
               o.status, o.delivery_status, o.total_amount, o.discount_rate,
               o.discount_amount, o.final_amount, o.approved_by, o.approved_at,
               o.notes, o.created_at, o.updated_at, o.version,
               c.company_name, u.nickname as user_name, u.email as user_email
        FROM orders o
        LEFT JOIN companies c ON o.company_seq = c.company_seq
        LEFT JOIN users u ON o.user_seq = u.user_seq
        <where>
            <if test="companySeq != null">
                AND o.company_seq = #{companySeq}
            </if>
            <if test="orderNumber != null and orderNumber != ''">
                AND o.order_number LIKE CONCAT('%', #{orderNumber}, '%')
            </if>
            <if test="status != null">
                AND o.status = #{status}
            </if>
            <if test="deliveryStatus != null">
                AND o.delivery_status = #{deliveryStatus}
            </if>
            <if test="startDate != null and endDate != null">
                AND DATE(o.order_date) BETWEEN #{startDate} AND #{endDate}
            </if>
            <if test="startDate != null and endDate == null">
                AND DATE(o.order_date) >= #{startDate}
            </if>
            <if test="startDate == null and endDate != null">
                AND DATE(o.order_date) &lt;= #{endDate}
            </if>
        </where>
        ORDER BY o.order_date DESC, o.order_seq DESC
    </select>

    <!-- 발주번호로 조회 -->
    <select id="findByOrderNumber" parameterType="string" resultMap="OrderResultMap">
        SELECT o.order_seq, o.company_seq, o.user_seq, o.order_number, o.order_date,
               o.status, o.delivery_status, o.total_amount, o.discount_rate,
               o.discount_amount, o.final_amount, o.approved_by, o.approved_at,
               o.notes, o.created_at, o.updated_at, o.version,
               c.company_name, u.nickname as user_name, u.email as user_email
        FROM orders o
        LEFT JOIN companies c ON o.company_seq = c.company_seq
        LEFT JOIN users u ON o.user_seq = u.user_seq
        WHERE o.order_number = #{orderNumber}
    </select>

    <!-- 회사별 발주 개수 조회 -->
    <select id="countByCompanySeq" resultType="long">
        SELECT COUNT(*)
        FROM orders o
        WHERE o.company_seq = #{companySeq}
        <if test="searchDto.orderNumber != null and searchDto.orderNumber != ''">
            AND o.order_number LIKE CONCAT('%', #{searchDto.orderNumber}, '%')
        </if>
        <if test="searchDto.status != null">
            AND o.status = #{searchDto.status}
        </if>
        <if test="searchDto.deliveryStatus != null">
            AND o.delivery_status = #{searchDto.deliveryStatus}
        </if>
        <if test="searchDto.startDate != null and searchDto.endDate != null">
            AND DATE(o.order_date) BETWEEN #{searchDto.startDate} AND #{searchDto.endDate}
        </if>
        <if test="searchDto.startDate != null and searchDto.endDate == null">
            AND DATE(o.order_date) >= #{searchDto.startDate}
        </if>
        <if test="searchDto.startDate == null and searchDto.endDate != null">
            AND DATE(o.order_date) &lt;= #{searchDto.endDate}
        </if>
    </select>

    <!-- 전체 발주 개수 조회 -->
    <select id="countAll" resultType="long">
        SELECT COUNT(*)
        FROM orders o
        <where>
            <if test="companySeq != null">
                AND o.company_seq = #{companySeq}
            </if>
            <if test="orderNumber != null and orderNumber != ''">
                AND o.order_number LIKE CONCAT('%', #{orderNumber}, '%')
            </if>
            <if test="status != null">
                AND o.status = #{status}
            </if>
            <if test="deliveryStatus != null">
                AND o.delivery_status = #{deliveryStatus}
            </if>
            <if test="startDate != null and endDate != null">
                AND DATE(o.order_date) BETWEEN #{startDate} AND #{endDate}
            </if>
            <if test="startDate != null and endDate == null">
                AND DATE(o.order_date) >= #{startDate}
            </if>
            <if test="startDate == null and endDate != null">
                AND DATE(o.order_date) &lt;= #{endDate}
            </if>
        </where>
    </select>

    <!-- 미처리 발주 목록 -->
    <select id="findPendingOrders" resultMap="OrderResultMap">
        SELECT o.order_seq, o.company_seq, o.user_seq, o.order_number, o.order_date,
               o.status, o.delivery_status, o.total_amount, o.discount_rate,
               o.discount_amount, o.final_amount, o.approved_by, o.approved_at,
               o.notes, o.created_at, o.updated_at, o.version,
               c.company_name, u.nickname as user_name, u.email as user_email
        FROM orders o
        LEFT JOIN companies c ON o.company_seq = c.company_seq
        LEFT JOIN users u ON o.user_seq = u.user_seq
        WHERE o.status = 'PENDING'
        ORDER BY o.order_date ASC
        LIMIT 10
    </select>

    <!-- 당일 최대 시퀀스 조회 -->
    <select id="findMaxDailySequence" parameterType="string" resultType="integer">
        SELECT COALESCE(MAX(CAST(SUBSTRING(order_number, LENGTH(#{datePrefix}) + 1) AS UNSIGNED)), 0)
        FROM orders
        WHERE order_number LIKE CONCAT(#{datePrefix}, '%')
    </select>


</mapper>