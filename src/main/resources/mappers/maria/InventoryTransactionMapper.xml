<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.goorm.board.mapper.InventoryTransactionMapper">

    <!-- 재고 거래 이력 결과 맵 -->
    <resultMap id="inventoryTransactionResultMap" type="io.goorm.board.entity.InventoryTransaction">
        <id property="transactionSeq" column="transaction_seq"/>
        <result property="transactionType" column="transaction_type"/>
        <result property="productSeq" column="product_seq"/>
        <result property="categorySeq" column="category_seq"/>
        <result property="quantity" column="quantity"/>
        <result property="unitPrice" column="unit_price"/>
        <result property="totalAmount" column="total_amount"/>
        <result property="note" column="note"/>
        <result property="processedBySeq" column="processed_by_seq"/>
        <result property="processedAt" column="processed_at"/>
        <result property="orderSeq" column="order_seq"/>
        <result property="excelFilename" column="excel_filename"/>
        <result property="excelFilepath" column="excel_filepath"/>
        <result property="excelRowNum" column="excel_row_num"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <!-- 거래 이력 등록 -->
    <insert id="insert" parameterType="io.goorm.board.entity.InventoryTransaction" useGeneratedKeys="true" keyProperty="transactionSeq">
        INSERT INTO inventory_transaction (
            transaction_type, product_seq, category_seq, quantity, unit_price, total_amount,
            note, processed_by_seq, processed_at, order_seq, excel_filename, excel_filepath, excel_row_num,
            created_at, updated_at
        ) VALUES (
            #{transactionType}, #{productSeq}, #{categorySeq}, #{quantity}, #{unitPrice}, #{totalAmount},
            #{note}, #{processedBySeq}, #{processedAt}, #{orderSeq}, #{excelFilename}, #{excelFilepath}, #{excelRowNum},
            CURRENT_TIMESTAMP, CURRENT_TIMESTAMP
        )
    </insert>

    <!-- 거래 이력 조회 (상세) -->
    <select id="findBySeq" parameterType="long" resultMap="inventoryTransactionResultMap">
        SELECT *
        FROM inventory_transaction
        WHERE transaction_seq = #{transactionSeq}
    </select>

    <!-- 거래 이력 목록 조회 (검색 조건 포함) -->
    <select id="findAll" resultMap="inventoryTransactionResultMap">
        SELECT *
        FROM inventory_transaction
        <where>
            <if test="searchDto.startDate != null">
                AND processed_at >= #{searchDto.startDate}
            </if>
            <if test="searchDto.endDate != null">
                AND processed_at &lt;= #{searchDto.endDate}
            </if>
            <if test="searchDto.productSeq != null">
                AND product_seq = #{searchDto.productSeq}
            </if>
            <if test="searchDto.categorySeq != null">
                AND category_seq = #{searchDto.categorySeq}
            </if>
            <if test="searchDto.processedBySeq != null">
                AND processed_by_seq = #{searchDto.processedBySeq}
            </if>
            <if test="searchDto.excelFilename != null and searchDto.excelFilename != ''">
                AND excel_filename LIKE CONCAT('%', #{searchDto.excelFilename}, '%')
            </if>
            <if test="searchDto.keyword != null and searchDto.keyword != ''">
                AND (note LIKE CONCAT('%', #{searchDto.keyword}, '%')
                     OR excel_filename LIKE CONCAT('%', #{searchDto.keyword}, '%'))
            </if>
        </where>
        ORDER BY processed_at DESC
        <if test="searchDto.size > 0">
            LIMIT #{searchDto.size} OFFSET #{searchDto.offset}
        </if>
    </select>

    <!-- 거래 이력 총 개수 (검색 조건 포함) -->
    <select id="countAll" resultType="int">
        SELECT COUNT(*)
        FROM inventory_transaction
        <where>
            <if test="searchDto.startDate != null">
                AND processed_at >= #{searchDto.startDate}
            </if>
            <if test="searchDto.endDate != null">
                AND processed_at &lt;= #{searchDto.endDate}
            </if>
            <if test="searchDto.productSeq != null">
                AND product_seq = #{searchDto.productSeq}
            </if>
            <if test="searchDto.categorySeq != null">
                AND category_seq = #{searchDto.categorySeq}
            </if>
            <if test="searchDto.processedBySeq != null">
                AND processed_by_seq = #{searchDto.processedBySeq}
            </if>
            <if test="searchDto.excelFilename != null and searchDto.excelFilename != ''">
                AND excel_filename LIKE CONCAT('%', #{searchDto.excelFilename}, '%')
            </if>
            <if test="searchDto.keyword != null and searchDto.keyword != ''">
                AND (note LIKE CONCAT('%', #{searchDto.keyword}, '%')
                     OR excel_filename LIKE CONCAT('%', #{searchDto.keyword}, '%'))
            </if>
        </where>
    </select>

    <!-- 특정 거래 유형의 이력 조회 -->
    <select id="findByTransactionType" resultMap="inventoryTransactionResultMap">
        SELECT *
        FROM inventory_transaction
        WHERE transaction_type = #{transactionType}
        ORDER BY processed_at DESC
    </select>

    <!-- 특정 상품의 거래 이력 조회 -->
    <select id="findByProductSeq" parameterType="long" resultMap="inventoryTransactionResultMap">
        SELECT *
        FROM inventory_transaction
        WHERE product_seq = #{productSeq}
        ORDER BY processed_at DESC
    </select>

    <!-- 특정 처리자의 거래 이력 조회 -->
    <select id="findByProcessedBySeq" parameterType="long" resultMap="inventoryTransactionResultMap">
        SELECT *
        FROM inventory_transaction
        WHERE processed_by_seq = #{processedBySeq}
        ORDER BY processed_at DESC
    </select>

    <!-- 기간별 거래 이력 조회 -->
    <select id="findByPeriod" resultMap="inventoryTransactionResultMap">
        SELECT *
        FROM inventory_transaction
        WHERE processed_at >= #{startDate}
        AND processed_at &lt;= #{endDate}
        ORDER BY processed_at DESC
    </select>

    <!-- 특정 주문의 출고 이력 조회 (ORDER_CONSUMED 타입) -->
    <select id="findByOrderSeq" parameterType="long" resultMap="inventoryTransactionResultMap">
        SELECT *
        FROM inventory_transaction
        WHERE order_seq = #{orderSeq}
        AND transaction_type = 'ORDER_CONSUMED'
        ORDER BY processed_at DESC
    </select>

    <!-- 특정 엑셀 파일의 입고 이력 조회 (RECEIVING 타입) -->
    <select id="findByExcelFilename" parameterType="string" resultMap="inventoryTransactionResultMap">
        SELECT *
        FROM inventory_transaction
        WHERE excel_filename = #{excelFilename}
        AND transaction_type = 'RECEIVING'
        ORDER BY processed_at DESC
    </select>

    <!-- 거래 이력 수정 -->
    <update id="update" parameterType="io.goorm.board.entity.InventoryTransaction">
        UPDATE inventory_transaction
        SET transaction_type = #{transactionType},
            product_seq = #{productSeq},
            category_seq = #{categorySeq},
            quantity = #{quantity},
            unit_price = #{unitPrice},
            total_amount = #{totalAmount},
            note = #{note},
            processed_by_seq = #{processedBySeq},
            processed_at = #{processedAt},
            order_seq = #{orderSeq},
            excel_filename = #{excelFilename},
            excel_filepath = #{excelFilepath},
            excel_row_num = #{excelRowNum},
            updated_at = CURRENT_TIMESTAMP
        WHERE transaction_seq = #{transactionSeq}
    </update>

    <!-- 거래 이력 삭제 -->
    <delete id="deleteBySeq" parameterType="long">
        DELETE FROM inventory_transaction
        WHERE transaction_seq = #{transactionSeq}
    </delete>

</mapper>